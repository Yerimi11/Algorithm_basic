# 테스트케이스 추가
# [["a", "1", "aaa", "c", "ng"], ["a", "1", "bbb", "e", "g"], ["c", "1", "aaa", "d", "ng"], ["d", "2", "bbb", "d", "ng"]]  >>>> 5
# [["a", "aa"], ["aa", "a"], ["a", "a"]]  >>>> 1
# [["100", "100", "ryan", "music", "2"], ["200", "200", "apeach", "math", "2"], ["300", "300", "tube", "computer", "3"], ["400", "400", "con", "computer", "4"], ["500", "500", "muzi", "music", "3"], ["600", "600", "apeach", "music", "2"]] >>>> 3
# [["a", "1", "aaa", "c", "ng"], ["b", "1", "bbb", "c", "g"], ["c", "1", "aaa", "d", "ng"], ["d", "2", "bbb", "d", "ng"]]  >>>>> 3

# https://school.programmers.co.kr/learn/courses/30/lessons/42890#

[["a", "1", "aaa", "c", "ng"], 
 ["a", "1", "bbb", "e", "g"], 
 ["c", "1", "aaa", "d", "ng"], 
 ["d", "2", "bbb", "d", "ng"]]  >>>> 5
(1,3), (1,4), (1,5), (2,4), (3,4)
# (1,2,3), (1,3,4).. 이런 것 다 되지만 최소 갯수여야하니 pass

# combination으로 열 조합을 찾아낸다. 조합 갯수는 1개부터(학번 하나로도 되니까)
# for문으로 행을 돌면서 열 조합에 나온 행의 인덱스를 해쉬 키-밸류로 넣어서 비교